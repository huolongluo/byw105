apply from: "${rootProject.rootDir}/build_script/common-build.gradle"
apply from: "${rootProject.rootDir}/build_script/library-module-build.gradle"
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.XXX.saas_contract_sdk'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        if (isDebugLibraryModule(project.name)){
            multiDexEnabled true
        }
    }
    resourcePrefix "mc_sdk_"

    buildTypes {

        debug {
            debuggable true
            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false
            buildConfigField('String', 'BASE_URL', rootProject.ext.swapHost)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        devRelease{
            minifyEnabled true
            buildConfigField('String', 'BASE_URL', rootProject.ext.swapHost)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            buildConfigField('String', 'BASE_URL', rootProject.ext.swapHost)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isDebugLibraryModule(project.name)) {
                manifest.srcFile 'src/main/application_manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/library_manifest/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding{
        enabled = true
    }
}
kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs' )

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    def lifecycle_version = "2.2.0"

    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"


    kapt "com.android.databinding:compiler:3.4.2"

    // 协程
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    //Kotlin Android Coroutines

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Logger
    // https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    // 下拉刷新
    // https://github.com/scwang90/SmartRefreshLayout
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'  //1.0.5及以前版本的老用户升级需谨慎，API改动过大
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'  //没有使用特殊Header，可以不加这行

    // Glide
    // https://github.com/bumptech/glide
    implementation "com.github.bumptech.glide:okhttp3-integration:4.8.0"
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    // Xpopup dialog库 最低编译版本29 ，最小兼容版本minSdkVersion19
    // https://github.com/li-xiaojun/XPopup
    api 'com.lxj:xpopup:2.1.12'

    // EventBus
    // https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'

    //BaseQuickAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    // https://github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:2.0.1'

    //分享
    api files('libs/ShareSDK-Core-3.5.0.jar')
    api files('libs/ShareSDK-ShortMessage-3.5.0.jar')
    api files('libs/ShareSDK-QQ-3.5.0.jar')
    api files('libs/ShareSDK-Wechat-3.5.0.jar')
    api files('libs/ShareSDK-Wechat-Moments-3.5.0.jar')
    api files('libs/ShareSDK-Wechat-Core-3.5.0.jar')
//    api files('libs/ShareSDK-ShortMessage-3.5.0.jar')
//    api files('libs/ShareSDK-ShortMessage-3.5.0.jar')
    api files('libs/MobTools-2019.0306.1850.jar')
    api files('libs/MobCommons-2019.0306.1851.jar')

    //k线指标计算
    implementation 'com.tictactec:ta-lib:0.4.0'

    implementation project(path: ':MPChartLib')

    //socket.io
    implementation ('io.socket:socket.io-client:1.0.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    implementation project(':common')
}


//配置本地maven仓库
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            //本地Maven库的路径，这个路径可以随意安排放在哪里
//            repository(url: "file:///D:/AndroidSDK/LocalMaven")
//            //包名
//            pom.groupId = 'com.XXX'
//            //项目名
//            pom.artifactId = 'ModularContractSDK'
//            //版本号
//            pom.version = '1.0.0'
//            //使用的时候就可以：implementation '包名:项目名:版本号'
//        }
//    }
//}
